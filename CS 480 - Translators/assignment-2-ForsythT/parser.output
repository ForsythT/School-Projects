Terminals unused in grammar

   DEF
   FOR
   RETURN
   COMMA


State 27 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: build

    2 build: build statement
    3      | statement

    4 statement: IDENTIFIER ASSIGN expression NEWLINE
    5          | IF condition COLON NEWLINE then
    6          | WHILE condition COLON NEWLINE INDENT build DEDENT
    7          | BREAK NEWLINE
    8          | error NEWLINE

    9 then: INDENT build DEDENT
   10     | INDENT build DEDENT elif_state

   11 elif_state: ELIF condition COLON NEWLINE then
   12           | ELSE COLON NEWLINE INDENT build DEDENT

   13 condition: LPAREN condition RPAREN
   14          | condition AND condition
   15          | condition OR condition
   16          | expression

   17 expression: LPAREN expression RPAREN
   18           | NOT expression
   19           | expression EQ expression
   20           | expression NEQ expression
   21           | expression GT expression
   22           | expression GTE expression
   23           | expression LT expression
   24           | expression LTE expression
   25           | expression PLUS expression
   26           | expression MINUS expression
   27           | expression TIMES expression
   28           | expression DIVIDEDBY expression
   29           | INTEGER
   30           | FLOAT
   31           | BOOLEAN
   32           | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256) 8
IDENTIFIER (258) 4 32
FLOAT (259) 30
INTEGER (260) 29
BOOLEAN (261) 31
BREAK (262) 7
DEF (263)
ELIF (264) 11
ELSE (265) 12
FOR (266)
IF (267) 5
RETURN (268)
WHILE (269) 6
AND (270) 14
OR (271) 15
ASSIGN (272) 4
PLUS (273) 25
MINUS (274) 26
TIMES (275) 27
DIVIDEDBY (276) 28
EQ (277) 19
NEQ (278) 20
GT (279) 21
GTE (280) 22
LT (281) 23
LTE (282) 24
NOT (283) 18
LPAREN (284) 13 17
RPAREN (285) 13 17
COMMA (286)
COLON (287) 5 6 11 12
NEWLINE (288) 4 5 6 7 8 11 12
INDENT (289) 6 9 10 12
DEDENT (290) 6 9 10 12


Nonterminals, with rules where they appear

$accept (36)
    on left: 0
program (37)
    on left: 1, on right: 0
build (38)
    on left: 2 3, on right: 1 2 6 9 10 12
statement (39)
    on left: 4 5 6 7 8, on right: 2 3
then (40)
    on left: 9 10, on right: 5 11
elif_state (41)
    on left: 11 12, on right: 10
condition (42)
    on left: 13 14 15 16, on right: 5 6 11 13 14 15
expression (43)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32, on right:
    4 16 17 18 19 20 21 22 23 24 25 26 27 28


State 0

    0 $accept: . program $end

    error       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    BREAK       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5

    program    go to state 6
    build      go to state 7
    statement  go to state 8


State 1

    8 statement: error . NEWLINE

    NEWLINE  shift, and go to state 9


State 2

    4 statement: IDENTIFIER . ASSIGN expression NEWLINE

    ASSIGN  shift, and go to state 10


State 3

    7 statement: BREAK . NEWLINE

    NEWLINE  shift, and go to state 11


State 4

    5 statement: IF . condition COLON NEWLINE then

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17

    condition   go to state 18
    expression  go to state 19


State 5

    6 statement: WHILE . condition COLON NEWLINE INDENT build DEDENT

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17

    condition   go to state 20
    expression  go to state 19


State 6

    0 $accept: program . $end

    $end  shift, and go to state 21


State 7

    1 program: build .
    2 build: build . statement

    error       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    BREAK       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5

    $end  reduce using rule 1 (program)

    statement  go to state 22


State 8

    3 build: statement .

    $default  reduce using rule 3 (build)


State 9

    8 statement: error NEWLINE .

    $default  reduce using rule 8 (statement)


State 10

    4 statement: IDENTIFIER ASSIGN . expression NEWLINE

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 23

    expression  go to state 24


State 11

    7 statement: BREAK NEWLINE .

    $default  reduce using rule 7 (statement)


State 12

   32 expression: IDENTIFIER .

    $default  reduce using rule 32 (expression)


State 13

   30 expression: FLOAT .

    $default  reduce using rule 30 (expression)


State 14

   29 expression: INTEGER .

    $default  reduce using rule 29 (expression)


State 15

   31 expression: BOOLEAN .

    $default  reduce using rule 31 (expression)


State 16

   18 expression: NOT . expression

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 23

    expression  go to state 25


State 17

   13 condition: LPAREN . condition RPAREN
   17 expression: LPAREN . expression RPAREN

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17

    condition   go to state 26
    expression  go to state 27


State 18

    5 statement: IF condition . COLON NEWLINE then
   14 condition: condition . AND condition
   15          | condition . OR condition

    AND    shift, and go to state 28
    OR     shift, and go to state 29
    COLON  shift, and go to state 30


State 19

   16 condition: expression .
   19 expression: expression . EQ expression
   20           | expression . NEQ expression
   21           | expression . GT expression
   22           | expression . GTE expression
   23           | expression . LT expression
   24           | expression . LTE expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression

    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    TIMES      shift, and go to state 33
    DIVIDEDBY  shift, and go to state 34
    EQ         shift, and go to state 35
    NEQ        shift, and go to state 36
    GT         shift, and go to state 37
    GTE        shift, and go to state 38
    LT         shift, and go to state 39
    LTE        shift, and go to state 40

    $default  reduce using rule 16 (condition)


State 20

    6 statement: WHILE condition . COLON NEWLINE INDENT build DEDENT
   14 condition: condition . AND condition
   15          | condition . OR condition

    AND    shift, and go to state 28
    OR     shift, and go to state 29
    COLON  shift, and go to state 41


State 21

    0 $accept: program $end .

    $default  accept


State 22

    2 build: build statement .

    $default  reduce using rule 2 (build)


State 23

   17 expression: LPAREN . expression RPAREN

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 23

    expression  go to state 42


State 24

    4 statement: IDENTIFIER ASSIGN expression . NEWLINE
   19 expression: expression . EQ expression
   20           | expression . NEQ expression
   21           | expression . GT expression
   22           | expression . GTE expression
   23           | expression . LT expression
   24           | expression . LTE expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression

    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    TIMES      shift, and go to state 33
    DIVIDEDBY  shift, and go to state 34
    EQ         shift, and go to state 35
    NEQ        shift, and go to state 36
    GT         shift, and go to state 37
    GTE        shift, and go to state 38
    LT         shift, and go to state 39
    LTE        shift, and go to state 40
    NEWLINE    shift, and go to state 43


State 25

   18 expression: NOT expression .
   19           | expression . EQ expression
   20           | expression . NEQ expression
   21           | expression . GT expression
   22           | expression . GTE expression
   23           | expression . LT expression
   24           | expression . LTE expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression

    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    TIMES      shift, and go to state 33
    DIVIDEDBY  shift, and go to state 34

    $default  reduce using rule 18 (expression)


State 26

   13 condition: LPAREN condition . RPAREN
   14          | condition . AND condition
   15          | condition . OR condition

    AND     shift, and go to state 28
    OR      shift, and go to state 29
    RPAREN  shift, and go to state 44


State 27

   16 condition: expression .
   17 expression: LPAREN expression . RPAREN
   19           | expression . EQ expression
   20           | expression . NEQ expression
   21           | expression . GT expression
   22           | expression . GTE expression
   23           | expression . LT expression
   24           | expression . LTE expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression

    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    TIMES      shift, and go to state 33
    DIVIDEDBY  shift, and go to state 34
    EQ         shift, and go to state 35
    NEQ        shift, and go to state 36
    GT         shift, and go to state 37
    GTE        shift, and go to state 38
    LT         shift, and go to state 39
    LTE        shift, and go to state 40
    RPAREN     shift, and go to state 45

    RPAREN    [reduce using rule 16 (condition)]
    $default  reduce using rule 16 (condition)


State 28

   14 condition: condition AND . condition

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17

    condition   go to state 46
    expression  go to state 19


State 29

   15 condition: condition OR . condition

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17

    condition   go to state 47
    expression  go to state 19


State 30

    5 statement: IF condition COLON . NEWLINE then

    NEWLINE  shift, and go to state 48


State 31

   25 expression: expression PLUS . expression

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 23

    expression  go to state 49


State 32

   26 expression: expression MINUS . expression

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 23

    expression  go to state 50


State 33

   27 expression: expression TIMES . expression

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 23

    expression  go to state 51


State 34

   28 expression: expression DIVIDEDBY . expression

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 23

    expression  go to state 52


State 35

   19 expression: expression EQ . expression

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 23

    expression  go to state 53


State 36

   20 expression: expression NEQ . expression

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 23

    expression  go to state 54


State 37

   21 expression: expression GT . expression

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 23

    expression  go to state 55


State 38

   22 expression: expression GTE . expression

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 23

    expression  go to state 56


State 39

   23 expression: expression LT . expression

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 23

    expression  go to state 57


State 40

   24 expression: expression LTE . expression

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 23

    expression  go to state 58


State 41

    6 statement: WHILE condition COLON . NEWLINE INDENT build DEDENT

    NEWLINE  shift, and go to state 59


State 42

   17 expression: LPAREN expression . RPAREN
   19           | expression . EQ expression
   20           | expression . NEQ expression
   21           | expression . GT expression
   22           | expression . GTE expression
   23           | expression . LT expression
   24           | expression . LTE expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression

    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    TIMES      shift, and go to state 33
    DIVIDEDBY  shift, and go to state 34
    EQ         shift, and go to state 35
    NEQ        shift, and go to state 36
    GT         shift, and go to state 37
    GTE        shift, and go to state 38
    LT         shift, and go to state 39
    LTE        shift, and go to state 40
    RPAREN     shift, and go to state 45


State 43

    4 statement: IDENTIFIER ASSIGN expression NEWLINE .

    $default  reduce using rule 4 (statement)


State 44

   13 condition: LPAREN condition RPAREN .

    $default  reduce using rule 13 (condition)


State 45

   17 expression: LPAREN expression RPAREN .

    $default  reduce using rule 17 (expression)


State 46

   14 condition: condition . AND condition
   14          | condition AND condition .
   15          | condition . OR condition

    $default  reduce using rule 14 (condition)


State 47

   14 condition: condition . AND condition
   15          | condition . OR condition
   15          | condition OR condition .

    $default  reduce using rule 15 (condition)


State 48

    5 statement: IF condition COLON NEWLINE . then

    INDENT  shift, and go to state 60

    then  go to state 61


State 49

   19 expression: expression . EQ expression
   20           | expression . NEQ expression
   21           | expression . GT expression
   22           | expression . GTE expression
   23           | expression . LT expression
   24           | expression . LTE expression
   25           | expression . PLUS expression
   25           | expression PLUS expression .
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression

    TIMES      shift, and go to state 33
    DIVIDEDBY  shift, and go to state 34

    $default  reduce using rule 25 (expression)


State 50

   19 expression: expression . EQ expression
   20           | expression . NEQ expression
   21           | expression . GT expression
   22           | expression . GTE expression
   23           | expression . LT expression
   24           | expression . LTE expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   26           | expression MINUS expression .
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression

    TIMES      shift, and go to state 33
    DIVIDEDBY  shift, and go to state 34

    $default  reduce using rule 26 (expression)


State 51

   19 expression: expression . EQ expression
   20           | expression . NEQ expression
   21           | expression . GT expression
   22           | expression . GTE expression
   23           | expression . LT expression
   24           | expression . LTE expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   27           | expression TIMES expression .
   28           | expression . DIVIDEDBY expression

    $default  reduce using rule 27 (expression)


State 52

   19 expression: expression . EQ expression
   20           | expression . NEQ expression
   21           | expression . GT expression
   22           | expression . GTE expression
   23           | expression . LT expression
   24           | expression . LTE expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression
   28           | expression DIVIDEDBY expression .

    $default  reduce using rule 28 (expression)


State 53

   19 expression: expression . EQ expression
   19           | expression EQ expression .
   20           | expression . NEQ expression
   21           | expression . GT expression
   22           | expression . GTE expression
   23           | expression . LT expression
   24           | expression . LTE expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression

    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    TIMES      shift, and go to state 33
    DIVIDEDBY  shift, and go to state 34

    $default  reduce using rule 19 (expression)


State 54

   19 expression: expression . EQ expression
   20           | expression . NEQ expression
   20           | expression NEQ expression .
   21           | expression . GT expression
   22           | expression . GTE expression
   23           | expression . LT expression
   24           | expression . LTE expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression

    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    TIMES      shift, and go to state 33
    DIVIDEDBY  shift, and go to state 34

    $default  reduce using rule 20 (expression)


State 55

   19 expression: expression . EQ expression
   20           | expression . NEQ expression
   21           | expression . GT expression
   21           | expression GT expression .
   22           | expression . GTE expression
   23           | expression . LT expression
   24           | expression . LTE expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression

    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    TIMES      shift, and go to state 33
    DIVIDEDBY  shift, and go to state 34

    $default  reduce using rule 21 (expression)


State 56

   19 expression: expression . EQ expression
   20           | expression . NEQ expression
   21           | expression . GT expression
   22           | expression . GTE expression
   22           | expression GTE expression .
   23           | expression . LT expression
   24           | expression . LTE expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression

    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    TIMES      shift, and go to state 33
    DIVIDEDBY  shift, and go to state 34

    $default  reduce using rule 22 (expression)


State 57

   19 expression: expression . EQ expression
   20           | expression . NEQ expression
   21           | expression . GT expression
   22           | expression . GTE expression
   23           | expression . LT expression
   23           | expression LT expression .
   24           | expression . LTE expression
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression

    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    TIMES      shift, and go to state 33
    DIVIDEDBY  shift, and go to state 34

    $default  reduce using rule 23 (expression)


State 58

   19 expression: expression . EQ expression
   20           | expression . NEQ expression
   21           | expression . GT expression
   22           | expression . GTE expression
   23           | expression . LT expression
   24           | expression . LTE expression
   24           | expression LTE expression .
   25           | expression . PLUS expression
   26           | expression . MINUS expression
   27           | expression . TIMES expression
   28           | expression . DIVIDEDBY expression

    PLUS       shift, and go to state 31
    MINUS      shift, and go to state 32
    TIMES      shift, and go to state 33
    DIVIDEDBY  shift, and go to state 34

    $default  reduce using rule 24 (expression)


State 59

    6 statement: WHILE condition COLON NEWLINE . INDENT build DEDENT

    INDENT  shift, and go to state 62


State 60

    9 then: INDENT . build DEDENT
   10     | INDENT . build DEDENT elif_state

    error       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    BREAK       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5

    build      go to state 63
    statement  go to state 8


State 61

    5 statement: IF condition COLON NEWLINE then .

    $default  reduce using rule 5 (statement)


State 62

    6 statement: WHILE condition COLON NEWLINE INDENT . build DEDENT

    error       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    BREAK       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5

    build      go to state 64
    statement  go to state 8


State 63

    2 build: build . statement
    9 then: INDENT build . DEDENT
   10     | INDENT build . DEDENT elif_state

    error       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    BREAK       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    DEDENT      shift, and go to state 65

    statement  go to state 22


State 64

    2 build: build . statement
    6 statement: WHILE condition COLON NEWLINE INDENT build . DEDENT

    error       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    BREAK       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    DEDENT      shift, and go to state 66

    statement  go to state 22


State 65

    9 then: INDENT build DEDENT .
   10     | INDENT build DEDENT . elif_state

    ELIF  shift, and go to state 67
    ELSE  shift, and go to state 68

    $default  reduce using rule 9 (then)

    elif_state  go to state 69


State 66

    6 statement: WHILE condition COLON NEWLINE INDENT build DEDENT .

    $default  reduce using rule 6 (statement)


State 67

   11 elif_state: ELIF . condition COLON NEWLINE then

    IDENTIFIER  shift, and go to state 12
    FLOAT       shift, and go to state 13
    INTEGER     shift, and go to state 14
    BOOLEAN     shift, and go to state 15
    NOT         shift, and go to state 16
    LPAREN      shift, and go to state 17

    condition   go to state 70
    expression  go to state 19


State 68

   12 elif_state: ELSE . COLON NEWLINE INDENT build DEDENT

    COLON  shift, and go to state 71


State 69

   10 then: INDENT build DEDENT elif_state .

    $default  reduce using rule 10 (then)


State 70

   11 elif_state: ELIF condition . COLON NEWLINE then
   14 condition: condition . AND condition
   15          | condition . OR condition

    AND    shift, and go to state 28
    OR     shift, and go to state 29
    COLON  shift, and go to state 72


State 71

   12 elif_state: ELSE COLON . NEWLINE INDENT build DEDENT

    NEWLINE  shift, and go to state 73


State 72

   11 elif_state: ELIF condition COLON . NEWLINE then

    NEWLINE  shift, and go to state 74


State 73

   12 elif_state: ELSE COLON NEWLINE . INDENT build DEDENT

    INDENT  shift, and go to state 75


State 74

   11 elif_state: ELIF condition COLON NEWLINE . then

    INDENT  shift, and go to state 60

    then  go to state 76


State 75

   12 elif_state: ELSE COLON NEWLINE INDENT . build DEDENT

    error       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    BREAK       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5

    build      go to state 77
    statement  go to state 8


State 76

   11 elif_state: ELIF condition COLON NEWLINE then .

    $default  reduce using rule 11 (elif_state)


State 77

    2 build: build . statement
   12 elif_state: ELSE COLON NEWLINE INDENT build . DEDENT

    error       shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    BREAK       shift, and go to state 3
    IF          shift, and go to state 4
    WHILE       shift, and go to state 5
    DEDENT      shift, and go to state 78

    statement  go to state 22


State 78

   12 elif_state: ELSE COLON NEWLINE INDENT build DEDENT .

    $default  reduce using rule 12 (elif_state)
